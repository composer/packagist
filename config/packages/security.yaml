security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: auto
            cost: 12
            migrate_from: [legacy]

        legacy:
            algorithm:        sha512
            encode_as_base64: false
            iterations:       1
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        packagist:
            id: App\Security\Provider\UserProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:      .*
            user_checker: App\Security\UserChecker
            custom_authenticators:
                - App\Security\BruteForceLoginFormAuthenticator
                - App\Security\GitHubAuthenticator
            entry_point: App\Security\BruteForceLoginFormAuthenticator
            remember_me:
                secret: '%env(APP_REMEMBER_ME_SECRET)%'
                user_providers: packagist
                name: pauth
                always_remember_me: false
                secure: '%force_ssl%'
                lifetime: 31104000 # 1y
                signature_properties: ['password', 'sessionBuster']
            logout:
                enable_csrf: true
                clear_site_data:
                    - cookies
                    - storage
                    - cache
            lazy:         true
            two_factor:
                auth_form_path: 2fa_login
                check_path: 2fa_login_check
                enable_csrf: true
            switch_user:
                provider: packagist

    access_control:
        # Explicit public access
        - { path: ^/_(?:wdt|profiler)/, roles: PUBLIC_ACCESS }
        - { path: ^/login$, role: PUBLIC_ACCESS }
        - { path: ^/register($|/), role: PUBLIC_ACCESS }
        - { path: ^/reset-password($|/), role: PUBLIC_ACCESS }
        - { path: ^/logout$, role: PUBLIC_ACCESS }
        # This ensures that the form can only be accessed when two-factor authentication is in progress
        - { path: ^/2fa, role: IS_AUTHENTICATED_2FA_IN_PROGRESS }
        # Members only parts of the site
        - { path: ^/packages/submit$, role: ROLE_USER }
        - { path: ^/users/[^/]+/(2fa|delete)(/|$), role: ROLE_USER }
        - { path: ^/packages/fetch-info$, role: ROLE_USER }
        - { path: ^/profile(/|$), role: ROLE_USER }
        - { path: ^/trigger-github-sync/?$, role: ROLE_USER }
        - { path: ^/connect(/|$), role: ROLE_USER }
        - { path: ^/oauth/github/disconnect$, role: ROLE_USER }

    role_hierarchy:
        ROLE_UPDATE_PACKAGES: ~
        ROLE_DELETE_PACKAGES: ~
        ROLE_EDIT_PACKAGES: ~
        ROLE_ANTISPAM: ~
        ROLE_SPAMMER: ~
        ROLE_DISABLE_2FA: ~

        ROLE_ADMIN:       [ ROLE_USER, ROLE_UPDATE_PACKAGES, ROLE_EDIT_PACKAGES, ROLE_DELETE_PACKAGES, ROLE_ANTISPAM, ROLE_DISABLE_2FA ]
        ROLE_SUPERADMIN:  [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
